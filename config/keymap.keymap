#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        mission_ctl {
            bindings = <&kp LC(DOWN)>;
            key-positions = <27 28>;
        };
    };

    macros {
        eng_on_esc: eng_on_esc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp LANGUAGE_2>;
            label = "ENG_ON_ESC";
        };
    };

    behaviors {
        lt_hold_first: lt_hold_first {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_HOLD_FIRST";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-while-undecided;
        };

        lt_quick_tap: lt_quick_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_QUICK_TAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <190>;
            hold-while-undecided;
        };

        long_sticky_lt: long_sticky_lt {
            compatible = "zmk,behavior-sticky-key";
            label = "LONG_STICKY_LT";
            bindings = <&mo>;
            #binding-cells = <1>;
            release-after-ms = <99999>;
            quick-release;
        };

        layer_mkp: layer_mkp {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_MKP";
            bindings = <&mo>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
        };

        td_rightclick_scroll: td_rightclick_scroll {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_RIGHTCLICK_SCROLL";
            #binding-cells = <0>;
            bindings = <&mkp RCLK>, <&tog 1>;

            tapping-term-ms = <210>;
        };

        ht_rightclick: ht_rightclick {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_RIGHTCLICK";
            bindings = <&mo>, <&td_rightclick_scroll>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-while-undecided;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp Q                        &kp W      &kp E    &kp R        &kp T                 &kp Y                      &kp U                   &kp I                 &kp O               &kp P
&kp A                        &kp S      &kp D    &kp F        &kp G                 &kp H                      &kp J                   &kp K                 &kp L               &mt LEFT_CONTROL SEMICOLON
&kp Z                        &kp X      &kp C    &kp V        &kp B                 &kp N                      &kp M                   &mkp LCLK             &ht_rightclick 1 0  &kp SLASH
&mt LEFT_COMMAND LANGUAGE_2  &kp COMMA  &kp DOT  &eng_on_esc  &mt LEFT_SHIFT SPACE  &lt_quick_tap 4 BACKSPACE  &lt_hold_first 6 ENTER  &lt_hold_first 2 TAB  &none               &none                       &none  &mt RIGHT_COMMAND LANGUAGE_1
            >;
        };

        layer_1 {
            bindings = <
&trans  &trans  &trans  &trans     &trans     &trans                &trans  &trans     &trans                 &trans
&trans  &trans  &trans  &trans     &trans     &kp LG(LEFT_BRACKET)  &trans  &trans     &kp LG(RIGHT_BRACKET)  &trans
&trans  &trans  &trans  &mkp RCLK  &mkp LCLK  &trans                &trans  &mkp RCLK  &trans                 &trans
&trans  &trans  &trans  &trans     &trans     &trans                &trans  &trans     &trans                 &trans  &trans  &trans
            >;
        };

        layer_2 {
            bindings = <
&kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(N3)            &kp LS(N4)                &kp LS(N5)        &kp EQUAL      &kp GRAVE   &kp LS(SQT)            &kp SQT            &kp LS(EQUAL)
&sk LEFT_CONTROL  &sk LEFT_ALT      &sk LEFT_SHIFT        &sk LCMD                  &kp LS(NUMBER_6)  &kp LS(N8)     &kp LS(N9)  &kp LS(LEFT_BRACKET)   &kp LEFT_BRACKET   &kp MINUS
&trans            &trans            &kp NON_US_BACKSLASH  &kp LS(NON_US_BACKSLASH)  &kp LS(N7)        &kp LS(GRAVE)  &kp LS(N0)  &kp LS(RIGHT_BRACKET)  &kp RIGHT_BRACKET  &kp LS(MINUS)
&none             &none             &trans                &lt 5 ESC                 &lt 3 SPACE       &trans         &trans      &trans                 &trans             &trans         &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&kp NUMBER_1      &kp NUMBER_2  &kp N3          &kp N4    &kp N5            &kp NUMBER_6  &kp N7        &kp N8        &kp N9        &kp N0
&sk LEFT_CONTROL  &sk LEFT_ALT  &sk LEFT_SHIFT  &sk LCMD  &kp LS(NUMBER_6)  &kp PERIOD    &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS
&trans            &trans        &trans          &trans    &trans            &kp N0        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL
&none             &none         &trans          &trans    &trans            &trans        &trans        &trans        &kp N0        &trans     &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&kp LC(NUMBER_1)  &kp LC(NUMBER_2)  &kp LC(NUMBER_3)  &kp LC(NUMBER_4)  &kp LC(N5)     &trans          &trans     &trans        &trans     &trans
&kp LG(W)         &kp LC(LEFT)      &kp LC(UP_ARROW)  &kp LC(DOWN)      &kp LC(RIGHT)  &kp LEFT_ARROW  &kp DOWN   &kp UP_ARROW  &kp RIGHT  &trans
&trans            &trans            &trans            &trans            &trans         &trans          &trans     &trans        &trans     &trans
&trans            &trans            &trans            &trans            &trans         &trans          &kp LC(A)  &kp LC(E)     &trans     &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&bt BT_NXT   &trans  &trans  &trans  &trans  &kp F13  &kp F7  &kp F8  &kp F9  &kp F10
&trans       &trans  &trans  &trans  &trans  &kp F12  &kp F4  &kp F5  &kp F6  &trans
&trans       &trans  &trans  &trans  &trans  &kp F11  &kp F1  &kp F2  &kp F3  &trans
&bootloader  &trans  &trans  &trans  &trans  &trans   &trans  &trans  &trans  &trans   &trans  &bootloader
            >;
        };

        layer_6 {
            bindings = <
&kp LC(NUMBER_1)  &kp LC(NUMBER_2)  &kp LC(NUMBER_3)  &kp LC(NUMBER_4)  &kp LC(N5)  &trans              &trans        &trans            &trans         &trans
&trans            &trans            &trans            &trans            &trans      &kp LG(LEFT_ARROW)  &kp LG(DOWN)  &kp LG(UP_ARROW)  &kp LG(RIGHT)  &trans
&trans            &trans            &trans            &trans            &trans      &trans              &trans        &trans            &trans         &trans
&trans            &trans            &trans            &trans            &trans      &trans              &trans        &trans            &trans         &trans  &trans  &trans
            >;
        };
    };
};
